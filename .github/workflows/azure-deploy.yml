name: Deploy Portfolio to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
  AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Application

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          out/
          staticwebapp.config.json
        retention-days: 1

  deploy-infrastructure:
    runs-on: ubuntu-latest
    name: Deploy Infrastructure
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Resource Group
      uses: azure/CLI@v2
      with:
        inlineScript: |
          az group create \
            --name "rg-${{ env.AZURE_ENV_NAME }}" \
            --location "${{ env.AZURE_LOCATION }}" \
            --tags "azd-env-name=${{ env.AZURE_ENV_NAME }}"

    - name: Deploy Bicep Template
      uses: azure/CLI@v2
      with:
        inlineScript: |
          az deployment group create \
            --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
            --template-file infra/main.bicep \
            --parameters infra/main.parameters.json \
            --parameters environmentName="${{ env.AZURE_ENV_NAME }}" \
            --parameters location="${{ env.AZURE_LOCATION }}" \
            --parameters resourceGroupName="rg-${{ env.AZURE_ENV_NAME }}"

    - name: Get Static Web App Details
      id: swa-details
      uses: azure/CLI@v2
      with:
        inlineScript: |
          SWA_NAME=$(az deployment group show \
            --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
            --name main \
            --query properties.outputs.STATIC_WEB_APP_NAME.value -o tsv)
          
          SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list \
            --name "$SWA_NAME" \
            --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
            --query properties.apiKey -o tsv)
          
          echo "swa-name=$SWA_NAME" >> $GITHUB_OUTPUT
          echo "swa-deployment-token=$SWA_DEPLOYMENT_TOKEN" >> $GITHUB_OUTPUT

    outputs:
      swa-name: ${{ steps.swa-details.outputs.swa-name }}
      swa-deployment-token: ${{ steps.swa-details.outputs.swa-deployment-token }}

  deploy-application:
    runs-on: ubuntu-latest
    name: Deploy Application
    needs: [build, deploy-infrastructure]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: .

    - name: Deploy to Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ needs.deploy-infrastructure.outputs.swa-deployment-token }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: '/'
        output_location: 'out'
        skip_app_build: true

  deploy-pr-preview:
    runs-on: ubuntu-latest
    name: Deploy PR Preview
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get Static Web App Details
      id: swa-details
      uses: azure/CLI@v2
      with:
        inlineScript: |
          SWA_NAME=$(az deployment group show \
            --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
            --name main \
            --query properties.outputs.STATIC_WEB_APP_NAME.value -o tsv 2>/dev/null || echo "")
          
          if [ -n "$SWA_NAME" ]; then
            SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list \
              --name "$SWA_NAME" \
              --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
              --query properties.apiKey -o tsv)
            echo "swa-deployment-token=$SWA_DEPLOYMENT_TOKEN" >> $GITHUB_OUTPUT
          fi

    - name: Deploy PR Preview
      if: steps.swa-details.outputs.swa-deployment-token
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ steps.swa-details.outputs.swa-deployment-token }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: '/'
        output_location: 'out'
        skip_app_build: true

  close-pr-preview:
    runs-on: ubuntu-latest
    name: Close PR Preview
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    steps:
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get Static Web App Details
      id: swa-details
      uses: azure/CLI@v2
      with:
        inlineScript: |
          SWA_NAME=$(az deployment group show \
            --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
            --name main \
            --query properties.outputs.STATIC_WEB_APP_NAME.value -o tsv 2>/dev/null || echo "")
          
          if [ -n "$SWA_NAME" ]; then
            SWA_DEPLOYMENT_TOKEN=$(az staticwebapp secrets list \
              --name "$SWA_NAME" \
              --resource-group "rg-${{ env.AZURE_ENV_NAME }}" \
              --query properties.apiKey -o tsv)
            echo "swa-deployment-token=$SWA_DEPLOYMENT_TOKEN" >> $GITHUB_OUTPUT
          fi

    - name: Close PR Preview
      if: steps.swa-details.outputs.swa-deployment-token
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ steps.swa-details.outputs.swa-deployment-token }}
        action: 'close'
